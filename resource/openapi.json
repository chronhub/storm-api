{
    "openapi": "3.0.0",
    "info": {
        "title": "Storm API",
        "description": "Storm API",
        "contact": {
            "name": "Chronhub",
            "email": "chronhubgit@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "{scheme}://{url}/{base_path}",
            "description": "Local server",
            "variables": {
                "scheme": {
                    "default": "http",
                    "description": "scheme url"
                },
                "url": {
                    "default": "storm-api.dvl.to",
                    "description": "server url"
                },
                "base_path": {
                    "default": "api/v1/storm",
                    "description": "base path"
                }
            }
        }
    ],
    "paths": {
        "/stream": {
            "get": {
                "tags": [
                    "Stream"
                ],
                "description": "Retrieve all stream events per stream name and aggregate id",
                "operationId": "retrieveAllPerAggregateId",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Aggregate id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/StreamEvents"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/StreamNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "post": {
                "tags": [
                    "Stream"
                ],
                "description": "Create a new stream",
                "operationId": "createStream",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "419": {
                        "$ref": "#/components/responses/StreamAlreadyExists"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Stream"
                ],
                "description": "Delete stream by stream name",
                "operationId": "deleteStream",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/StreamNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/projection": {
            "delete": {
                "tags": [
                    "Projection"
                ],
                "description": "Delete projection by stream name",
                "operationId": "deleteProjection",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Projection name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_events",
                        "in": "query",
                        "description": "With emitted events",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/ProjectionNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/stream/categories": {
            "get": {
                "tags": [
                    "Stream"
                ],
                "description": "Get category name(s)",
                "operationId": "requestCategoryNames",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Get or or many category name(s) separated by comma",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/projection/state": {
            "get": {
                "tags": [
                    "Projection"
                ],
                "description": "Get state of projection name",
                "operationId": "requestProjectionState",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Projection name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/StreamNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/projection/status": {
            "get": {
                "tags": [
                    "Projection"
                ],
                "description": "Get status of projection name",
                "operationId": "requestProjectionStatus",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Projection name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/ProjectionNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/projection/position": {
            "get": {
                "tags": [
                    "Projection"
                ],
                "description": "Get stream positions of projection name",
                "operationId": "requestProjectionStreamPosition",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Projection name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/ProjectionNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/stream/exists": {
            "get": {
                "tags": [
                    "Stream"
                ],
                "description": "Check if stream exists",
                "operationId": "streamExists",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/StreamNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/stream/names": {
            "get": {
                "tags": [
                    "Stream"
                ],
                "description": "Get stream names separated by comma",
                "operationId": "requestStreamNames",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/projection/reset": {
            "get": {
                "tags": [
                    "Projection"
                ],
                "description": "Reset projection by name",
                "operationId": "resetProjection",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Projection name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/ProjectionNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/stream/paginated": {
            "get": {
                "tags": [
                    "Stream"
                ],
                "description": "Retrieve paginated stream events per stream name",
                "operationId": "retrieveAllPaginated",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "max number of events to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "sort direction",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "query offset",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/StreamEvents"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/StreamNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/stream/from": {
            "get": {
                "tags": [
                    "Stream"
                ],
                "description": "Retrieve stream events from included position",
                "operationId": "retrieveFromIncludedStreamPosition",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "from included stream position",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/StreamEvents"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/StreamNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/stream/from_to": {
            "get": {
                "tags": [
                    "Stream"
                ],
                "description": "Retrieve stream events from included position to next position",
                "operationId": "retrieveFromToStreamPosition",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "from included stream position",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "to included stream position, must be greater than from",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 2
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "sort stream",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/StreamEvents"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/StreamNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/projection/stop": {
            "get": {
                "tags": [
                    "Projection"
                ],
                "description": "Stop projection by name",
                "operationId": "stopProjection",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Projection name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/ProjectionNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BodyData": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "": {
                                    "$ref": "#/components/schemas/StreamEvents"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StreamEvents": {
                "required": [
                    "no",
                    "headers",
                    "content"
                ],
                "properties": {
                    "no": {
                        "$ref": "#/components/schemas/StreamEventNo"
                    },
                    "headers": {
                        "$ref": "#/components/schemas/StreamEventHeaders"
                    },
                    "content": {
                        "$ref": "#/components/schemas/StreamEventContent"
                    }
                },
                "type": "object"
            },
            "StreamEventNo": {
                "required": [
                    "no"
                ],
                "properties": {
                    "no": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "additionalProperties": true
            },
            "StreamEventHeaders": {
                "required": [
                    "__event_id",
                    "__event_time",
                    "__event_type",
                    "__aggregate_id",
                    "__aggregate_id_type",
                    "__aggregate_type",
                    "__aggregate_version"
                ],
                "properties": {
                    "__event_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "__event_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "__event_type": {
                        "type": "string"
                    },
                    "__aggregate_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "__aggregate_id_type": {
                        "type": "string"
                    },
                    "__aggregate_type": {
                        "type": "string"
                    },
                    "__aggregate_version": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "__internal_position": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "__event_causation_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "__event_causation_type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "additionalProperties": true
            },
            "StreamEventContent": {
                "type": "object"
            },
            "Error": {
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "code": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "type": "array",
                "items": {}
            }
        },
        "responses": {
            "StreamEvents": {
                "description": "Stream events",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BodyData"
                        }
                    }
                }
            },
            "400": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "401": {
                "description": "Authentication failed",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "403": {
                "description": "Authorization failed",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "StreamNotFound": {
                "description": "Stream not found, either stream name does not exists or no more stream events to retrieve",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "ProjectionNotFound": {
                "description": "Projection not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "StreamAlreadyExists": {
                "description": "Stream already exists",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "500": {
                "description": "Internal error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Stream",
            "description": "Stream operations"
        },
        {
            "name": "Projection",
            "description": "Projection operations"
        }
    ]
}